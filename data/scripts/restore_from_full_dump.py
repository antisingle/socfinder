#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–ª–Ω–æ–≥–æ –¥–∞–º–ø–∞
"""
import os
import sys
import subprocess
import logging
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def restore_from_dump():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¥–∞–º–ø–∞"""
    logger.info("üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–ª–Ω–æ–≥–æ –¥–∞–º–ø–∞...")
    
    # –ü—É—Ç—å –∫ –¥–∞–º–ø—É
    dump_path = '/app/data/dumps/socfinder_full_dump_29_fields.sql'
    
    if not os.path.exists(dump_path):
        logger.error(f"‚ùå –î–∞–º–ø –Ω–µ –Ω–∞–π–¥–µ–Ω: {dump_path}")
        return False
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –¥–∞–º–ø–∞
        dump_size = os.path.getsize(dump_path) / (1024 * 1024)  # –≤ –ú–ë
        logger.info(f"üìä –†–∞–∑–º–µ—Ä –¥–∞–º–ø–∞: {dump_size:.2f} –ú–ë")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –¥–∞–º–ø–∞ (—Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)
        cmd = [
            'psql',
            '--host=postgres',
            '--port=5432',
            '--username=socfinder',
            '--dbname=socfinder',
            '--file=' + dump_path
        ]
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        env = os.environ.copy()
        env['PGPASSWORD'] = os.getenv('POSTGRES_PASSWORD', 'test_password_123')
        
        result = subprocess.run(cmd, env=env, capture_output=True, text=True)
        
        if result.returncode != 0:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É
            logger.warning(f"‚ö†Ô∏è pg_restore –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º {result.returncode}")
            logger.warning(f"‚ö†Ô∏è stderr: {result.stderr}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ projects —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ
            try:
                check_cmd = [
                    'psql',
                    '--host=postgres',
                    '--port=5432',
                    '--username=socfinder',
                    '--dbname=socfinder',
                    '--command=SELECT COUNT(*) FROM projects;'
                ]
                
                check_result = subprocess.run(check_cmd, env=env, capture_output=True, text=True)
                if check_result.returncode == 0 and '166848' in check_result.stdout:
                    logger.info("‚úÖ –î–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –µ—Å—Ç—å, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É pg_restore")
                    return True
                else:
                    logger.error("‚ùå –î–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
                    return False
            except Exception as e:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: {e}")
                return False
        
        logger.info(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ –ø–æ–ª–Ω–æ–≥–æ –¥–∞–º–ø–∞")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    start_time = time.time()
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –¥–∞–º–ø–∞
    success = restore_from_dump()
    
    end_time = time.time()
    logger.info(f"‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
    
    return 0 if success else 1

if __name__ == "__main__":
    sys.exit(main())
