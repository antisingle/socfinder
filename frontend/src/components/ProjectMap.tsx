import React, { useMemo } from 'react';
import { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';
import L from 'leaflet';
import 'leaflet/dist/leaflet.css';

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ –º–∞—Ä–∫–µ—Ä–æ–≤ Leaflet
delete (L.Icon.Default.prototype as any)._getIconUrl;
L.Icon.Default.mergeOptions({
  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.8.0/images/marker-icon-2x.png',
  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.8.0/images/marker-icon.png',
  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.8.0/images/marker-shadow.png',
});

interface Project {
  id: number;
  name: string;
  region: string;
  org: string;  // –ò–∑–º–µ–Ω–µ–Ω–æ —Å organization –Ω–∞ org
  winner: boolean;
  money_req_grant: number;
  year?: number;
  direction?: string;
  contest?: string;
  coordinates?: { lat: number; lng: number };
}

interface ProjectMapProps {
  projects: Project[];
}

// –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –†–æ—Å—Å–∏–∏
const CITY_COORDINATES: { [key: string]: [number, number] } = {
  '–ú–æ—Å–∫–≤–∞': [55.7558, 37.6173],
  '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥': [59.9311, 30.3609],
  '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫': [55.0084, 82.9357],
  '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥': [56.8431, 60.6454],
  '–ö–∞–∑–∞–Ω—å': [55.8304, 49.0661],
  '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥': [56.2965, 43.9361],
  '–ß–µ–ª—è–±–∏–Ω—Å–∫': [55.1644, 61.4368],
  '–°–∞–º–∞—Ä–∞': [53.2001, 50.15],
  '–û–º—Å–∫': [54.9885, 73.3242],
  '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É': [47.2357, 39.7015],
  '–£—Ñ–∞': [54.7388, 55.9721],
  '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫': [56.0184, 92.8672],
  '–ü–µ—Ä–º—å': [58.0105, 56.2502],
  '–í–æ–ª–≥–æ–≥—Ä–∞–¥': [48.7080, 44.5133],
  '–í–æ—Ä–æ–Ω–µ–∂': [51.6720, 39.1843],
  '–°–∞—Ä–∞—Ç–æ–≤': [51.5924, 46.0348],
  '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä': [45.0355, 38.9753],
  '–¢–æ–ª—å—è—Ç—Ç–∏': [53.5303, 49.3461],
  '–ò–∂–µ–≤—Å–∫': [56.8527, 53.2118],
  '–£–ª—å—è–Ω–æ–≤—Å–∫': [54.3142, 48.4031],
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ —Ä–µ–≥–∏–æ–Ω—É
const getCoordinatesForRegion = (region: string): [number, number] => {
  // –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  if (CITY_COORDINATES[region]) {
    return CITY_COORDINATES[region];
  }
  
  // –ò—â–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  for (const city in CITY_COORDINATES) {
    if (region.includes(city) || city.includes(region)) {
      return CITY_COORDINATES[city];
    }
  }
  
  // –ï—Å–ª–∏ —Ä–µ–≥–∏–æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç "–æ–±–ª–∞—Å—Ç—å", "–∫—Ä–∞–π", "—Ä–µ—Å–ø—É–±–ª–∏–∫–∞" - –∏—â–µ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
  const regionWords = region.toLowerCase().split(' ');
  for (const word of regionWords) {
    for (const city in CITY_COORDINATES) {
      if (city.toLowerCase().includes(word) || word.includes(city.toLowerCase())) {
        return CITY_COORDINATES[city];
      }
    }
  }
  
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Ü–µ–Ω—Ç—Ä –†–æ—Å—Å–∏–∏
  return [55.7558, 37.6173]; // –ú–æ—Å–∫–≤–∞
};

// –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤
const createIcon = (winner: boolean) => {
  return L.divIcon({
    html: winner ? 'üèÜ' : 'üìç',
    className: 'custom-div-icon',
    iconSize: [30, 30],
    iconAnchor: [15, 15],
    popupAnchor: [0, -15]
  });
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –Ω–∞ –º–∞—Ä–∫–µ—Ä–∞—Ö
const MapController: React.FC<{ projects: Project[] }> = ({ projects }) => {
  const map = useMap();
  
  React.useEffect(() => {
    if (projects.length > 0) {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
      const coordinates = projects.map(project => {
        const coords = getCoordinatesForRegion(project.region);
        return coords;
      });
      
      if (coordinates.length > 0) {
        // –°–æ–∑–¥–∞–µ–º bounds –¥–ª—è –≤—Å–µ—Ö —Ç–æ—á–µ–∫
        const markers = coordinates.map(coord => L.marker(coord as [number, number]));
        const group = L.featureGroup(markers);
        map.fitBounds(group.getBounds().pad(0.1));
      }
    }
  }, [map, projects]);
  
  return null;
};

const ProjectMap: React.FC<ProjectMapProps> = ({ projects }) => {
  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç—ã –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –Ω–∞–ª–æ–∂–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ä–æ–≤
  const groupedProjects = useMemo(() => {
    const groups: { [key: string]: Project[] } = {};
    
    projects.forEach(project => {
      const coords = getCoordinatesForRegion(project.region);
      const key = `${coords[0]},${coords[1]}`;
      
      if (!groups[key]) {
        groups[key] = [];
      }
      groups[key].push(project);
    });
    
    return Object.entries(groups).map(([coordStr, projectsGroup]) => {
      const [lat, lng] = coordStr.split(',').map(Number);
      return {
        lat,
        lng,
        projects: projectsGroup
      };
    });
  }, [projects]);

  const formatMoney = (amount: number) => {
    return new Intl.NumberFormat('ru-RU').format(amount) + ' ‚ÇΩ';
  };

  return (
    <div style={{ height: '600px', width: '100%' }}>
      <MapContainer
        center={[61.5240, 105.3188]} // –¶–µ–Ω—Ç—Ä –†–æ—Å—Å–∏–∏
        zoom={4}
        style={{ height: '100%', width: '100%' }}
        scrollWheelZoom={true}
      >
        <TileLayer
          attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
          url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        />
        
        <MapController projects={projects} />
        
        {groupedProjects.map((group, index) => {
          // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–µ —Å–º–µ—â–µ–Ω–∏–µ –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–∞—Ä–∫–µ—Ä–æ–≤
          const offset = group.projects.length > 1 ? Math.random() * 0.01 - 0.005 : 0;
          const hasWinners = group.projects.some(p => p.winner);
          
          return (
            <Marker
              key={index}
              position={[group.lat + offset, group.lng + offset]}
              icon={createIcon(hasWinners)}
            >
              <Popup maxWidth={400} className="custom-popup">
                <div style={{ maxHeight: '300px', overflowY: 'auto' }}>
                  <h3 style={{ margin: '0 0 10px 0', color: '#2d3748' }}>
                    üìç {group.projects[0].region}
                  </h3>
                  <p style={{ margin: '0 0 15px 0', color: '#4a5568', fontSize: '0.9em' }}>
                    <strong>{group.projects.length}</strong> –ø—Ä–æ–µ–∫—Ç{group.projects.length > 1 ? '–æ–≤' : ''}
                    {hasWinners && ' ‚Ä¢ '}
                    {hasWinners && <span style={{ color: '#d69e2e' }}>üèÜ –ï—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏</span>}
                  </p>
                  
                  <div style={{ maxHeight: '200px', overflowY: 'auto' }}>
                    {group.projects.slice(0, 5).map((project) => (
                      <div
                        key={project.id}
                        style={{
                          borderBottom: '1px solid #e2e8f0',
                          paddingBottom: '8px',
                          marginBottom: '8px',
                          fontSize: '0.85em'
                        }}
                      >
                        <div style={{ fontWeight: 'bold', color: '#2d3748', marginBottom: '4px' }}>
                          {project.winner ? 'üèÜ' : 'üìã'} {project.name.substring(0, 50)}
                          {project.name.length > 50 && '...'}
                        </div>
                        <div style={{ color: '#4a5568', fontSize: '0.9em' }}>
                          {project.org?.substring(0, 40)}
                          {project.org && project.org.length > 40 && '...'}
                        </div>
                        <div style={{ color: '#2d3748', fontWeight: '500', marginTop: '2px' }}>
                          {formatMoney(project.money_req_grant)}
                        </div>
                      </div>
                    ))}
                    {group.projects.length > 5 && (
                      <div style={{ 
                        textAlign: 'center', 
                        color: '#718096', 
                        fontSize: '0.8em',
                        marginTop: '8px'
                      }}>
                        ... –∏ –µ—â–µ {group.projects.length - 5} –ø—Ä–æ–µ–∫—Ç{group.projects.length - 5 > 1 ? '–æ–≤' : ''}
                      </div>
                    )}
                  </div>
                </div>
              </Popup>
            </Marker>
          );
        })}
      </MapContainer>
    </div>
  );
};

export default ProjectMap;
